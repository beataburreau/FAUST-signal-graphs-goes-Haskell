-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.5 from SigDot/Par.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pDotGraph -> DotGraph                       (0)
	%start_pStmt -> Stmt                               (1)
	%start_pListStmt -> ListStmt                       (2)
	%start_pAttr -> Attr                               (3)
	%start_pListAttr -> ListAttr                       (4)
	%start_pAKind -> AKind                             (5)
	%start_pKind -> Kind                               (6)
	%start_pGKind -> GKind                             (7)
	String -> L_quoted                                 (8)
	ID -> L_ID                                         (9)
	DotGraph -> 'strict' GKind ID '{' ListStmt '}'     (10)
	Stmt -> ID '[' ListAttr ']'                        (11)
	Stmt -> ID '->' ID '[' ListAttr ']'                (12)
	Stmt -> Kind '[' ListAttr ']'                      (13)
	Stmt -> Attr                                       (14)
	ListStmt ->                                        (15)
	ListStmt -> Stmt ';' ListStmt                      (16)
	Attr -> AKind '=' String                           (17)
	Attr -> AKind '=' ID                               (18)
	ListAttr ->                                        (19)
	ListAttr -> Attr ListAttr                          (20)
	AKind -> 'fontsize'                                (21)
	AKind -> 'rankdir'                                 (22)
	AKind -> 'label'                                   (23)
	AKind -> 'color'                                   (24)
	AKind -> 'fillcolor'                               (25)
	AKind -> 'style'                                   (26)
	AKind -> 'shape'                                   (27)
	Kind -> 'node'                                     (28)
	Kind -> 'edge'                                     (29)
	Kind -> 'graph'                                    (30)
	GKind -> 'digraph'                                 (31)
	GKind -> 'subgraph'                                (32)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'->'           { PT _ (TS _ 1) }
	';'            { PT _ (TS _ 2) }
	'='            { PT _ (TS _ 3) }
	'['            { PT _ (TS _ 4) }
	']'            { PT _ (TS _ 5) }
	'color'        { PT _ (TS _ 6) }
	'digraph'      { PT _ (TS _ 7) }
	'edge'         { PT _ (TS _ 8) }
	'fillcolor'    { PT _ (TS _ 9) }
	'fontsize'     { PT _ (TS _ 10) }
	'graph'        { PT _ (TS _ 11) }
	'label'        { PT _ (TS _ 12) }
	'node'         { PT _ (TS _ 13) }
	'rankdir'      { PT _ (TS _ 14) }
	'shape'        { PT _ (TS _ 15) }
	'strict'       { PT _ (TS _ 16) }
	'style'        { PT _ (TS _ 17) }
	'subgraph'     { PT _ (TS _ 18) }
	'{'            { PT _ (TS _ 19) }
	'}'            { PT _ (TS _ 20) }
	L_quoted       { PT _ (TL $$) }
	L_ID           { PT _ (T_ID $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pDotGraph rule  0
	%start_pStmt    rule  1
	%start_pListStmt rule  2
	%start_pAttr    rule  3
	%start_pListAttr rule  4
	%start_pAKind   rule  5
	%start_pKind    rule  6
	%start_pGKind   rule  7
	String          rule  8
	ID              rule  9
	DotGraph        rule  10
	Stmt            rules 11, 12, 13, 14
	ListStmt        rules 15, 16
	Attr            rules 17, 18
	ListAttr        rules 19, 20
	AKind           rules 21, 22, 23, 24, 25, 26, 27
	Kind            rules 28, 29, 30
	GKind           rules 31, 32

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'strict'       shift, and enter state 37

	DotGraph       goto state 36

State 1


	'color'        shift, and enter state 18
	'edge'         shift, and enter state 14
	'fillcolor'    shift, and enter state 19
	'fontsize'     shift, and enter state 20
	'graph'        shift, and enter state 15
	'label'        shift, and enter state 21
	'node'         shift, and enter state 16
	'rankdir'      shift, and enter state 22
	'shape'        shift, and enter state 23
	'style'        shift, and enter state 24
	L_ID           shift, and enter state 34

	ID             goto state 29
	Stmt           goto state 35
	Attr           goto state 32
	AKind          goto state 27
	Kind           goto state 33

State 2


	'color'        shift, and enter state 18
	'edge'         shift, and enter state 14
	'fillcolor'    shift, and enter state 19
	'fontsize'     shift, and enter state 20
	'graph'        shift, and enter state 15
	'label'        shift, and enter state 21
	'node'         shift, and enter state 16
	'rankdir'      shift, and enter state 22
	'shape'        shift, and enter state 23
	'style'        shift, and enter state 24
	L_ID           shift, and enter state 34
	%eof           reduce using rule 15

	ID             goto state 29
	Stmt           goto state 30
	ListStmt       goto state 31
	Attr           goto state 32
	AKind          goto state 27
	Kind           goto state 33

State 3


	'color'        shift, and enter state 18
	'fillcolor'    shift, and enter state 19
	'fontsize'     shift, and enter state 20
	'label'        shift, and enter state 21
	'rankdir'      shift, and enter state 22
	'shape'        shift, and enter state 23
	'style'        shift, and enter state 24

	Attr           goto state 28
	AKind          goto state 27

State 4


	'color'        shift, and enter state 18
	'fillcolor'    shift, and enter state 19
	'fontsize'     shift, and enter state 20
	'label'        shift, and enter state 21
	'rankdir'      shift, and enter state 22
	'shape'        shift, and enter state 23
	'style'        shift, and enter state 24
	%eof           reduce using rule 19

	Attr           goto state 25
	ListAttr       goto state 26
	AKind          goto state 27

State 5


	'color'        shift, and enter state 18
	'fillcolor'    shift, and enter state 19
	'fontsize'     shift, and enter state 20
	'label'        shift, and enter state 21
	'rankdir'      shift, and enter state 22
	'shape'        shift, and enter state 23
	'style'        shift, and enter state 24

	AKind          goto state 17

State 6


	'edge'         shift, and enter state 14
	'graph'        shift, and enter state 15
	'node'         shift, and enter state 16

	Kind           goto state 13

State 7


	'digraph'      shift, and enter state 11
	'subgraph'     shift, and enter state 12

	GKind          goto state 10

State 8


	L_quoted       shift, and enter state 9


State 9

	String -> L_quoted .                                (rule 8)

	';'            reduce using rule 8
	']'            reduce using rule 8
	'color'        reduce using rule 8
	'fillcolor'    reduce using rule 8
	'fontsize'     reduce using rule 8
	'label'        reduce using rule 8
	'rankdir'      reduce using rule 8
	'shape'        reduce using rule 8
	'style'        reduce using rule 8
	%eof           reduce using rule 8


State 10

	%start_pGKind -> GKind .                            (rule 7)

	%eof           accept


State 11

	GKind -> 'digraph' .                                (rule 31)

	L_ID           reduce using rule 31
	%eof           reduce using rule 31


State 12

	GKind -> 'subgraph' .                               (rule 32)

	L_ID           reduce using rule 32
	%eof           reduce using rule 32


State 13

	%start_pKind -> Kind .                              (rule 6)

	%eof           accept


State 14

	Kind -> 'edge' .                                    (rule 29)

	'['            reduce using rule 29
	%eof           reduce using rule 29


State 15

	Kind -> 'graph' .                                   (rule 30)

	'['            reduce using rule 30
	%eof           reduce using rule 30


State 16

	Kind -> 'node' .                                    (rule 28)

	'['            reduce using rule 28
	%eof           reduce using rule 28


State 17

	%start_pAKind -> AKind .                            (rule 5)

	%eof           accept


State 18

	AKind -> 'color' .                                  (rule 24)

	'='            reduce using rule 24
	%eof           reduce using rule 24


State 19

	AKind -> 'fillcolor' .                              (rule 25)

	'='            reduce using rule 25
	%eof           reduce using rule 25


State 20

	AKind -> 'fontsize' .                               (rule 21)

	'='            reduce using rule 21
	%eof           reduce using rule 21


State 21

	AKind -> 'label' .                                  (rule 23)

	'='            reduce using rule 23
	%eof           reduce using rule 23


State 22

	AKind -> 'rankdir' .                                (rule 22)

	'='            reduce using rule 22
	%eof           reduce using rule 22


State 23

	AKind -> 'shape' .                                  (rule 27)

	'='            reduce using rule 27
	%eof           reduce using rule 27


State 24

	AKind -> 'style' .                                  (rule 26)

	'='            reduce using rule 26
	%eof           reduce using rule 26


State 25

	ListAttr -> Attr . ListAttr                         (rule 20)

	']'            reduce using rule 19
	'color'        shift, and enter state 18
	'fillcolor'    shift, and enter state 19
	'fontsize'     shift, and enter state 20
	'label'        shift, and enter state 21
	'rankdir'      shift, and enter state 22
	'shape'        shift, and enter state 23
	'style'        shift, and enter state 24
	%eof           reduce using rule 19

	Attr           goto state 25
	ListAttr       goto state 44
	AKind          goto state 27

State 26

	%start_pListAttr -> ListAttr .                      (rule 4)

	%eof           accept


State 27

	Attr -> AKind . '=' String                          (rule 17)
	Attr -> AKind . '=' ID                              (rule 18)

	'='            shift, and enter state 43


State 28

	%start_pAttr -> Attr .                              (rule 3)

	%eof           accept


State 29

	Stmt -> ID . '[' ListAttr ']'                       (rule 11)
	Stmt -> ID . '->' ID '[' ListAttr ']'               (rule 12)

	'->'           shift, and enter state 41
	'['            shift, and enter state 42


State 30

	ListStmt -> Stmt . ';' ListStmt                     (rule 16)

	';'            shift, and enter state 40


State 31

	%start_pListStmt -> ListStmt .                      (rule 2)

	%eof           accept


State 32

	Stmt -> Attr .                                      (rule 14)

	';'            reduce using rule 14
	%eof           reduce using rule 14


State 33

	Stmt -> Kind . '[' ListAttr ']'                     (rule 13)

	'['            shift, and enter state 39


State 34

	ID -> L_ID .                                        (rule 9)

	'->'           reduce using rule 9
	';'            reduce using rule 9
	'['            reduce using rule 9
	']'            reduce using rule 9
	'color'        reduce using rule 9
	'fillcolor'    reduce using rule 9
	'fontsize'     reduce using rule 9
	'label'        reduce using rule 9
	'rankdir'      reduce using rule 9
	'shape'        reduce using rule 9
	'style'        reduce using rule 9
	'{'            reduce using rule 9
	%eof           reduce using rule 9


State 35

	%start_pStmt -> Stmt .                              (rule 1)

	%eof           accept


State 36

	%start_pDotGraph -> DotGraph .                      (rule 0)

	%eof           accept


State 37

	DotGraph -> 'strict' . GKind ID '{' ListStmt '}'    (rule 10)

	'digraph'      shift, and enter state 11
	'subgraph'     shift, and enter state 12

	GKind          goto state 38

State 38

	DotGraph -> 'strict' GKind . ID '{' ListStmt '}'    (rule 10)

	L_ID           shift, and enter state 34

	ID             goto state 51

State 39

	Stmt -> Kind '[' . ListAttr ']'                     (rule 13)

	']'            reduce using rule 19
	'color'        shift, and enter state 18
	'fillcolor'    shift, and enter state 19
	'fontsize'     shift, and enter state 20
	'label'        shift, and enter state 21
	'rankdir'      shift, and enter state 22
	'shape'        shift, and enter state 23
	'style'        shift, and enter state 24

	Attr           goto state 25
	ListAttr       goto state 50
	AKind          goto state 27

State 40

	ListStmt -> Stmt ';' . ListStmt                     (rule 16)

	'color'        shift, and enter state 18
	'edge'         shift, and enter state 14
	'fillcolor'    shift, and enter state 19
	'fontsize'     shift, and enter state 20
	'graph'        shift, and enter state 15
	'label'        shift, and enter state 21
	'node'         shift, and enter state 16
	'rankdir'      shift, and enter state 22
	'shape'        shift, and enter state 23
	'style'        shift, and enter state 24
	'}'            reduce using rule 15
	L_ID           shift, and enter state 34
	%eof           reduce using rule 15

	ID             goto state 29
	Stmt           goto state 30
	ListStmt       goto state 49
	Attr           goto state 32
	AKind          goto state 27
	Kind           goto state 33

State 41

	Stmt -> ID '->' . ID '[' ListAttr ']'               (rule 12)

	L_ID           shift, and enter state 34

	ID             goto state 48

State 42

	Stmt -> ID '[' . ListAttr ']'                       (rule 11)

	']'            reduce using rule 19
	'color'        shift, and enter state 18
	'fillcolor'    shift, and enter state 19
	'fontsize'     shift, and enter state 20
	'label'        shift, and enter state 21
	'rankdir'      shift, and enter state 22
	'shape'        shift, and enter state 23
	'style'        shift, and enter state 24

	Attr           goto state 25
	ListAttr       goto state 47
	AKind          goto state 27

State 43

	Attr -> AKind '=' . String                          (rule 17)
	Attr -> AKind '=' . ID                              (rule 18)

	L_quoted       shift, and enter state 9
	L_ID           shift, and enter state 34

	String         goto state 45
	ID             goto state 46

State 44

	ListAttr -> Attr ListAttr .                         (rule 20)

	']'            reduce using rule 20
	%eof           reduce using rule 20


State 45

	Attr -> AKind '=' String .                          (rule 17)

	';'            reduce using rule 17
	']'            reduce using rule 17
	'color'        reduce using rule 17
	'fillcolor'    reduce using rule 17
	'fontsize'     reduce using rule 17
	'label'        reduce using rule 17
	'rankdir'      reduce using rule 17
	'shape'        reduce using rule 17
	'style'        reduce using rule 17
	%eof           reduce using rule 17


State 46

	Attr -> AKind '=' ID .                              (rule 18)

	';'            reduce using rule 18
	']'            reduce using rule 18
	'color'        reduce using rule 18
	'fillcolor'    reduce using rule 18
	'fontsize'     reduce using rule 18
	'label'        reduce using rule 18
	'rankdir'      reduce using rule 18
	'shape'        reduce using rule 18
	'style'        reduce using rule 18
	%eof           reduce using rule 18


State 47

	Stmt -> ID '[' ListAttr . ']'                       (rule 11)

	']'            shift, and enter state 55


State 48

	Stmt -> ID '->' ID . '[' ListAttr ']'               (rule 12)

	'['            shift, and enter state 54


State 49

	ListStmt -> Stmt ';' ListStmt .                     (rule 16)

	'}'            reduce using rule 16
	%eof           reduce using rule 16


State 50

	Stmt -> Kind '[' ListAttr . ']'                     (rule 13)

	']'            shift, and enter state 53


State 51

	DotGraph -> 'strict' GKind ID . '{' ListStmt '}'    (rule 10)

	'{'            shift, and enter state 52


State 52

	DotGraph -> 'strict' GKind ID '{' . ListStmt '}'    (rule 10)

	'color'        shift, and enter state 18
	'edge'         shift, and enter state 14
	'fillcolor'    shift, and enter state 19
	'fontsize'     shift, and enter state 20
	'graph'        shift, and enter state 15
	'label'        shift, and enter state 21
	'node'         shift, and enter state 16
	'rankdir'      shift, and enter state 22
	'shape'        shift, and enter state 23
	'style'        shift, and enter state 24
	'}'            reduce using rule 15
	L_ID           shift, and enter state 34

	ID             goto state 29
	Stmt           goto state 30
	ListStmt       goto state 57
	Attr           goto state 32
	AKind          goto state 27
	Kind           goto state 33

State 53

	Stmt -> Kind '[' ListAttr ']' .                     (rule 13)

	';'            reduce using rule 13
	%eof           reduce using rule 13


State 54

	Stmt -> ID '->' ID '[' . ListAttr ']'               (rule 12)

	']'            reduce using rule 19
	'color'        shift, and enter state 18
	'fillcolor'    shift, and enter state 19
	'fontsize'     shift, and enter state 20
	'label'        shift, and enter state 21
	'rankdir'      shift, and enter state 22
	'shape'        shift, and enter state 23
	'style'        shift, and enter state 24

	Attr           goto state 25
	ListAttr       goto state 56
	AKind          goto state 27

State 55

	Stmt -> ID '[' ListAttr ']' .                       (rule 11)

	';'            reduce using rule 11
	%eof           reduce using rule 11


State 56

	Stmt -> ID '->' ID '[' ListAttr . ']'               (rule 12)

	']'            shift, and enter state 59


State 57

	DotGraph -> 'strict' GKind ID '{' ListStmt . '}'    (rule 10)

	'}'            shift, and enter state 58


State 58

	DotGraph -> 'strict' GKind ID '{' ListStmt '}' .    (rule 10)

	%eof           reduce using rule 10


State 59

	Stmt -> ID '->' ID '[' ListAttr ']' .               (rule 12)

	';'            reduce using rule 12
	%eof           reduce using rule 12


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 33
Number of terminals: 22
Number of non-terminals: 18
Number of states: 60
